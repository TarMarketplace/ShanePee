name: API Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - "api/**"
  pull_request:
    types:
      - "opened"
      - "edited"
      - "reopened"
      - "synchronize"
    paths:
      - "api/**"
    branches:
      - "main"

env:
  IMAGE_NAME: ghcr.io/tarmarketplace/shanepee-api

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Gather tags name
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          SHA: ${{ github.sha }}
          REF: ${{ github.ref }}
          HEAD_REF: ${{ github.head_ref }}
        id: tags
        run: |
          RESULT="$IMAGE_NAME:$SHA"

          # Push event
          if [ -z "${HEAD_REF}" ]; then
              case "$REF" in
              refs/tags/v*)
                  RESULT="${RESULT},$IMAGE_NAME:${REF#refs/tags/v}"
              ;;
              refs/heads/main)
                  RESULT="${RESULT},$IMAGE_NAME:latest"
              ;;
              esac
          fi

          echo "tags = $RESULT"
          echo "tags=$RESULT" >> "$GITHUB_OUTPUT"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            NEXT_PUBLIC_BASE_API_URL=${{ vars.NEXT_PUBLIC_BASE_API_URL }}
          context: "{{defaultContext}}:api"
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
