{
    "swagger": "2.0",
    "info": {
        "description": "Shanepee API",
        "title": "Shanepee API",
        "contact": {},
        "version": "0.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/v1/a": {
            "get": {
                "description": "get A",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "A"
                ],
                "summary": "get A",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.A"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create A",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "A"
                ],
                "summary": "create A",
                "parameters": [
                    {
                        "description": "A body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ACreateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.A"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/a/:id": {
            "get": {
                "description": "get A",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "A"
                ],
                "summary": "get A",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.A"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete A",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "A"
                ],
                "summary": "delete A",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "update A",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "A"
                ],
                "summary": "update A",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "A body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.A"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "description": "Register",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "user create body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UserCreateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.A": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "long_data": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "domain.ACreateBody": {
            "type": "object",
            "properties": {
                "long_data": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "domain.Address": {
            "type": "object",
            "properties": {
                "district": {
                    "type": "string",
                    "x-nullable": true
                },
                "house_no": {
                    "type": "string",
                    "x-nullable": true
                },
                "postcode": {
                    "type": "string",
                    "x-nullable": true
                },
                "province": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "domain.PaymentMethod": {
            "type": "object",
            "properties": {
                "card_number": {
                    "type": "string",
                    "x-nullable": true
                },
                "card_owner": {
                    "type": "string",
                    "x-nullable": true
                },
                "cvv": {
                    "type": "string",
                    "x-nullable": true
                },
                "expire_date": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/domain.Address"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "gender": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "payment_method": {
                    "$ref": "#/definitions/domain.PaymentMethod"
                },
                "tel": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "domain.UserCreateBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}