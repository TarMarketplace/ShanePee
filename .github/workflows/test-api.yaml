name: API Test

on:
  pull_request:
    types:
      - "opened"
      - "edited"
      - "reopened"
      - "synchronize"
    paths:
      - "api/**"
    branches:
      - "main"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'
          cache-dependency-path: api/go.sum

      - name: Install dependencies
        run: go mod download
        working-directory: api

      - name: Install wire
        run: go install github.com/google/wire/cmd/wire@v0.6.0

      - name: Build
        run: make
        working-directory: api

      - name: Test with the Go CLI
        run: go test -v ./...
        working-directory: api

  test-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'
          cache-dependency-path: api/go.sum

      - name: Install dependencies
        run: go mod download
        working-directory: api

      - name: Install wire
        run: go install github.com/google/wire/cmd/wire@v0.6.0

      - name: Save old docs
        id: old-docs
        run: |
          OLD_DOCS_PATH="$(mktemp)"
          cat api/docs/openapi.json > "$OLD_DOCS_PATH"
          echo "OLD_DOCS_PATH=$OLD_DOCS_PATH" >> "$GITHUB_OUTPUT"

      - name: Build
        run: make docs
        env:
          APP_CORS_ALLOW_ORIGINS: http://localhost
        working-directory: api

      - name: Check openapi is up to date
        env:
          OLD_DOCS_PATH: ${{ steps.old-docs.OLD_DOCS_PATH }}
        run: |
          diff <(jq -S . "$OLD_DOCS_PATH") <(jq -S . docs/openapi.json)
